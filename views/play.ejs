<!doctype html>
<html>

<head>
    <meta charset="utf-8">
    <title>BetYourDignity</title>
    <style>
        body {
            background: #000000;
            padding: 0px;
            margin: 0px;
        }

        canvas {
            display: block;
            margin: 0;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    </style>
</head>

<body>
<div id="phaser-example"></div>

<script src="https://cdn.jsdelivr.net/npm/phaser@3.15.1/dist/phaser.min.js"></script>

<script>
    var config = {
        type: Phaser.AUTO,
        width: 800,
        height: 600,
        physics: {
            default: 'arcade',
            arcade: {
                debug: true,
                gravity: {y: 600}
            }
        },
        backgroundColor: '#2d2d2d',
        scene: {
            preload: preload,
            create: create,
            update: update
        }
    };

    var game = new Phaser.Game(config);
    var player1, player2, cursors;
    var leftHearts, rightHearts;
    var leftScore, rightScore;

    function preload() {
        this.load.image('A', 'a.png');
        this.load.image('B', 'b.png');
        this.load.image('heart', 'corazon.png');
        this.load.image('back', 'back.png');
        this.load.image('menu', 'menu.png');
    }

    function create() {
        // Create players
        cursors = this.input.keyboard.createCursorKeys();
        // this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);

        var group = this.physics.add.group({
            bounceX: false,
            bounceY: false,
            collideWorldBounds: true,
            collide: true,
        });

        var fondo = this.add.tileSprite(600, 400, 0, 0, 'back').setScale(0.8);
        fondo.alpha = 0.15;

        var menu = this.add.tileSprite(400, 60, 0, 0, 'menu');


        player1 = group.create(200, 300, "A");
        player2 = group.create(500, 500, "B");

        // player1.body.immovable = true;
        player2.body.immovable = true;


        this.physics.add.collider(group, group);

        // Create hearts
        leftHearts = this.add.group({
            key: 'heart',
            frameQuantity: 5,
            setScale: {
                x: 2,
                y: 2
            },
            setXY:
                {
                    x: 45,
                    y: 65,
                    stepX: 40
                }
        });

        rightHearts = this.add.group({
            key: 'heart',
            frameQuantity: 5,
            setScale: {
                x: 2,
                y: 2
            },
            setXY:
                {
                    x: 600,
                    y: 65,
                    stepX: 40
                }
        });

        // Textos
        leftScore = this.add.text(30, 25, 'Player 1 name equisde', {
            fontSize: '32px',
            fill: '#FFF',
            fontFamily: "Segoe UI, Arial",
            shadowColor: "#111",
        });
        leftScore.setShadow(2, 2, 'rgba(0,0,0,0.5)', 5);
        leftScore.setOrigin(0, 0.5);

        rightScore = this.add.text(800 - 30, 25, 'Player 2 name', {
            fontSize: '32px',
            fill: '#FFF',
            fontFamily: "Segoe UI, Arial",
            shadowColor: "#111",
            textAlign: "right"
        });
        rightScore.setShadow(2, 2, 'rgba(0,0,0,0.5)', 5);
        rightScore.setOrigin(1, 0.5);

    }

    function update() {
        if (cursors.left.isDown) {
            player1.setVelocityX(-200);
        }
        else if (cursors.right.isDown) {
            player1.setVelocityX(200);
        }
        if (cursors.up.isDown && (player1.body.onFloor() || player1.body.touching.down)) {
            player1.setVelocityY(-600);
        }


    }
</script>
</body>

</html>